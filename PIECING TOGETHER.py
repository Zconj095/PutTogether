from Language_Early_Stage import *
from Types_Of_Wavelengths import *
from Language_Extension_001 import *
from Types_Of_Dimension_Value import *
from Types_Of_Seasons import *
from Time_Of_Day import *
from Types_Of_Time import *
from Types_Of_Length import *
from Types_Of_Calendar_Time import *
from Numbers_One_To_OneThousand import *
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "STATES_OF_CONSCIOUSNESS.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FIVE DIFFERENT TYPES FOR THE EXISTING STATES OF CONSCIOUSNESS
        TYPE ONE IS THE "CONSCIOUSNESS"
        TYPE TWO IS THE "UNCONSCIOUSNESS"
        TYPE THREE IS THE "NONCONSCIOUSNESS"
        TYPE FOUR IS THE "SUBCONCSCIOUSNESS"
        TYPE FIVE IS THE "SUPERCONSCIOUSNESS"
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "EYESIGHT.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR TWO DIFFERENT TYPES FOR EYESIGHT
        TYPE ONE IS AN "NEAR-SIGHTED" EYESIGHT
        TYPE TWO IS AN "FAR-SIGHTED" EYESIGHT
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "MEMORY.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR TWO DIFFERENT TYPES FOR MEMORY
        TYPE ONE IS "LONG-TERM" MEMORY
        TYPE TWO IS "SHORT-TERM" MEMORY
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "AUTOMATION.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FOUR DIFFERENT TYPES FOR "AUTOMATION"
        TYPE ONE IS "AUTOMATIC"
        TYPE TWO IS "SEMI-AUTOMATIC"
        TYPE THREE IS "SEMI-MANUAL"
        TYPE FOUR IS "MANUAL"
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "MOON_PHASE.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FIVE DIFFERENT TYPES FOR FREQUENCIES
        TYPE ONE IS THE "NEW MOON"
        TYPE TWO IS THE "CRESENT MOON"
        TYPE THREE IS THE "WAXING QUARTER MOON"
        TYPE FOUR IS THE "GIBBOUS MOON"
        TYPE FIVE IS THE "FULL MOON"
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "FREQUENCY.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FIVE DIFFERENT TYPES FOR FREQUENCIES
        TYPE ONE IS AN "ALPHA" WAVELENGTH
        TYPE TWO IS AN "BETA" WAVELENGTH
        TYPE THREE IS AN "THETA" WAVELENGTH
        TYPE FOUR IS AN "DELTA" WAVELENGTH
        TYPE FIVE IS AN "GAMMA" WAVELENGTH
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "INTELLIGENCE.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR EIGHT DIFFERENT TYPES OF INTELLIGENCE
        TYPE ONE IS "VERBAL LINGUISTIC INTELLIGENCE"
        TYPE TWO IS "LOGICAL MATHEMATICAL INTELLIGENCE"
        TYPE THREE IS "SPATIAL INTELLIGENCE"
        TYPE FOUR IS "MUSICAL INTELLIGENCE"
        TYPE FIVE IS "BODILY KINAESTHETIC INTELLIGENCE"
        TYPE SIX IS "INTERPERSONAL INTELLIGENCE"
        TYPE SEVEN IS "INTRAPERSONAL INTELLIGENCE"
        TYPE EIGHT IS "NATURALISTIC INTELLIGENCE"
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "BRAIN.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR SIX DIFFERENT TYPES OF
        TYPE ONE IS THE "FRONTAL LOBE"
        TYPE TWO IS THE "TEMPORAL LOBE"
        TYPE THREE IS THE "PARIETAL LOBE"
        TYPE FOUR IS THE "OCCIPITAL LOBE"
        TYPE FIVE IS THE "CEREBELLUM"
        TYPE SIX IS THE "BRAIN STEM"
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "CHAKRA.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR SEVEN DIFFERENT TYPES CHAKRA
        TYPE ONE IS THE "CROWN CHAKRA"
        TYPE TWO IS THE "THIRD EYE CHAKRA"
        TYPE THREE IS THE "THROAT CHAKRA"
        TYPE FOUR IS THE "HEART CHAKRA"
        TYPE FIVE IS THE "SOLAR PLEXUS CHAKRA"
        TYPE FIVE IS THE "SACRAL CHAKRA"
        TYPE FIVE IS THE "ROOT CHAKRA"
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "AURA.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR SEVEN DIFFERENT TYPES FOR AURA
        TYPE ONE IS THE "CAUSAL BODY"
        TYPE TWO IS THE "CELESTIAL AURA"
        TYPE THREE IS THE "ETHERIC TEMPLATE"
        TYPE FOUR IS THE "ASTRAL AURA"
        TYPE FIVE IS THE "MENTAL AURA"
        TYPE SIX IS THE "EMOTIONAL_AURA"        
        TYPE SEVEN IS THE "ETHERIC AURA"
    END CLASS:
END COMMAND:

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "NATURE.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR TWENTYFIVE DIFFERENT TYPES FOR "HUMAN NATURE"
        TYPE ONE IS "ADAMANT"
        TYPE TWO IS "BASHFUL"
        TYPE THREE IS "BOLD"
        TYPE FOUR IS "BRAVE"
        TYPE FIVE IS "CALM"
        TYPE SIX IS "CAREFUL"
        TYPE SEVEN IS "DOCILE"
        TYPE EIGHT IS "GENTLE"
        TYPE NINE IS "HARDY"
        TYPE TEN IS "HASTY"
        TYPE ELEVEN IS "IMPISH"
        TYPE TWELVE IS "JOLLY"
        TYPE THIRTEEN IS "LAX"
        TYPE FOURTEEN IS "LONELY"
        TYPE FIFTEEN IS "MILD"
        TYPE SIXTEEN IS "MODEST"
        TYPE SEVENTEEN IS "NAIVE"
        TYPE EIGHTEEN IS "NAUGHTY"
        TYPE NINETEEN IS "QUIET"
        TYPE TWENTY IS "QUIRKY"
        TYPE TWENTYONE IS "RASH"
        TYPE TWENTYTWO IS "RELAXED"
        TYPE TWENTYTHREE IS "SASSY"
        TYPE TWENTYFOUR IS "SERIOUS"
        TYPE TWENTYFIVE IS "TIMID"
    END CLASS:
END COMMAND:


CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "PERSONALITY.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR SIXTEEN DIFFERENT TYPES FOR PERSONALITY
        TYPE ONE IS "INFJ"
        TYPE TWO IS "ISFJ"
        TYPE THREE IS "INTJ"
        TYPE FOUR IS "ISTJ"
        TYPE FIVE IS "ISFP"
        TYPE SIX IS "INFP"
        TYPE SEVEN IS "INTP"
        TYPE EIGHT IS "ISTP"
        TYPE NINE IS "ENFJ"
        TYPE TEN IS "ENFP"
        TYPE ELEVEN IS "ESFP"
        TYPE TWELVE IS "ESFJ"
        TYPE THIRTEEN IS "ENTJ"
        TYPE FOURTEEN IS "ENTP"
        TYPE FIFTEEN IS "ESTJ"
        TYPE SIXTEEN IS "ESTP"
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "PERSONALITY_TYPE.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR EIGHT DIFFERENT SUBTYPES FOR PERSONALITY
        TYPE ONE IS "INTROVERTED SENSING"
        TYPE TWO IS "EXTRAVERTED SENSING"
        TYPE THREE IS "INTROVERTED INTUITION"
        TYPE FOUR IS "EXTRAVERTED INTUITION"
        TYPE FIVE IS "INTROVERTED THINKING"
        TYPE SIX IS "EXTRAVERTED THINKING"
        TYPE SEVEN IS "INTROVERTED FEELING"
        TYPE EIGHT IS "EXTRAVERTED FEELING"
    END CLASS:
END COMMAND:


      AND 

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "PERSONALITY_CATEGORY.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FOUR DIFFERENT SUBTYPES FOR PERSONALITY
        TYPE ONE IS "SENSING"
        TYPE TWO IS "INTUITION"
        TYPE THREE IS "THINKING"
        TYPE FOUR IS "FEELING"
    END CLASS:
END COMMAND:

EACH PERSON ON PLANET "EARTH" IS GIVEN LIFE UNDER A SPECIFIC "MOON" PHASE
EACH PERSON GIVEN BIRTH ON PLANET "EARTH" IS GIVEN LIFE WITH A SPECIFIC "ZODIAC SIGN"

THERE ARE 5000 KNOWN FREQUENCIES OF THE HUMAN BRAIN
THERE ARE 11 KNOWN "DECIMAL" PLACES "PER" 1 FREQUENCY
THERE ARE 5 "SECTIONS" OF THE BRAIN
THERE ARE 16 TYPES OF PERSONALITY
THERE ARE 6 TYPES OF INTELLIGENCE
THERE ARE 5 CLASSES OF BRAINWAVE
THERE ARE 7 TYPES OF BASIC CHAKRA
THERE ARE 7 TYPES OF BASIC AURA
THERE ARE 25 TYPES OF BASIC "HUMAN NATURE"

24 HOURS IS EQUIVALENT TO 1 DAY
60 MINUTES IS EQUIVALENT TO 1 HOUR
60 SECONDS IS EQUIVALENT TO 1 MINUTE
1000 MILLISECONDS IS EQUIVALENT TO 1 SECOND

1 DAY IS EQUIVALENT TO 86400 SECONDS
1 DAY IS EQUIVALENT TO 1440 MINUTES
1 DAY IS EQUIVALENT TO

1 HOUR IS EQUIVALENT TO 3600 SECONDS
1 MILLISECOND IS EQUIVALENT TO 0.001 SECOND

1 MILLIMETER IS EQUIVALENT TO 1 MILLIMETER VALUE
1 MILLIMETER IS EQUIVALENT TO .1 CENTIMETER VALUE
1 MILLIMETER IS EQUIVALENT TO .001 METER VALUE
1 MILLIMETER IS EQUIVALENT TO .000001 KILOMETER VALUE
1 MILLIMETER IS EQUIVALENT TO .0393700787 INCHES VALUE
1 MILLIMETER IS EQUIVALENT TO .0032808399 FOOT VALUE
1 MILLIMETER IS EQUIVALENT TO .0010936133 YARD VALUE
1 MILLIMETER IS EQUIVALENT TO .00000062137119 MILE VALUE

1 CENTIMETER IS EQUIVALENT TO 10 MILLIMETER VALUE
1 CENTIMETER IS EQUIVALENT TO 1 CENTIMETER VALUE
1 CENTIMETER IS EQUIVALENT TO 0.01 METER VALUE
1 CENTIMETER IS EQUIVALENT TO 0.00001 KILOMETER VALUE
1 CENTIMETER IS EQUIVALENT TO 0.3937007874 INCH VALUE
1 CENTIMETER IS EQUIVALENT TO 0.032808399 FOOT VALUE
1 CENTIMETER IS EQUIVALENT TO 0.010936133 YARD VALUE
1 CENTIMETER IS EQUIVALENT TO 0.0000062137 MILE VALUE

1 METER IS EQUIVALENT TO 1000 MILLIMETERS
1 METER IS EQUIVALENT TO 100 CENTIMETERS
1 METER IS EQUIVALENT TO 1 METER VALUE
1 METER IS EQUIVALENT TO 0.001 KILOMETER VALUE
1 METER IS EQUIVALENT TO 39.3700787402 INCHES
1 METER IS EQUIVALENT TO 3.280839895 FEET
1 METER IS EQUIVALENT TO 1.0936132983 YARDS
1 METER IS EQUIVALENT TO 0.0006213712 MILE VALUE

1 KILOMETER IS EQUIVALENT TO 1000000 MILLIMETERS
1 KILOMETER IS EQUIVALENT TO 100000 CENTIMETERS
1 KILOMETER IS EQUIVALENT TO 1000 METERS
1 KILOMETER IS EQUIVALENT TO 1 KILOMETER VALUE
1 KILOMETER IS EQUIVALENT TO 39370.078740157 INCHES
1 KILOMETER IS EQUIVALENT TO 3280.8398950131 FEET
1 KILOMETER IS EQUIVALENT TO 1093.6132983377 YARD VALUE
1 KILOMETER IS EQUIVALENT TO 0.6213711922 MILE VALUE

1 INCH IS EQUIVALENT TO 25.4 MILLIMETERS
1 INCH IS EQUIVALENT TO 2.54 CENTIMETERS
1 INCH IS EQUIVALENT TO 0.0254 METER VALUE
1 INCH IS EQUIVALENT TO 0.0000254 KILOMETER VALUE
1 INCH IS EQUIVALENT TO 1 INCH VALUE
1 INCH IS EQUIVALENT TO 0.0833333333 FOOT VALUE
1 INCH IS EQUIVALENT TO 0.0277777778 YARD VALUE
1 INCH IS EQUIVALENT TO 0.0000157828 MILE VALUE

1 FOOT IS EQUIVALENT TO 304.8 MILLIMETERS
1 FOOT IS EQUIVALENT TO 30.48 CENTIMETERS
1 FOOT IS EQUIVALENT TO 0.3048 METER VALUE
1 FOOT IS EQUIVALENT TO 0.0003048 KILOMETER VALUE
1 FOOT IS EQUIVALENT TO 12 INCHES
1 FOOT IS EQUIVALENT TO 1 FEET
1 FOOT IS EQUIVALENT TO 0.3333333333 YARD VALUE
1 FOOT IS EQUIVALENT TO 0.0001893939 MILE VALUE

1 YARD IS EQUIVALENT TO 914.4 MILLIMETERS
1 FOOT IS EQUIVALENT TO 91.44 CENTIMETERS
1 YARD IS EQUIVALENT TO 0.9144 METER VALUE
1 YARD IS EQUIVALENT TO 914.4 MILLIMETERS
1 YARD IS EQUIVALENT TO 0.0009144 KILOMETER VALUE
1 YARD IS EQUIVALENT TO 36 INCHES
1 YARD IS EQUIVALENT TO 3 FEET
1 YARD IS EQUIVALENT TO 1 YARD VALUE
1 YARD IS EQUIVALENT TO 0.0005681818 MILE VALUE

1 MILE IS EQUIVALENT TO 1609344 MILLIMETERS
1 MILE IS EQUIVALENT TO 160934.4 CENTIMETERS
1 MILE IS EQUIVALENT TO 1609.344 METERS
1 MILE IS EQUIVALENT TO 1.609344 KILOMETERS
1 MILE IS EQUIVALENT TO 63360 INCHES
1 MILE IS EQUIVALENT TO 5280 FEET
1 MILE IS EQUIVALENT TO 1760 YARDS
1 MILE IS EQUIVALENT TO 1 MILE VALUE

1 BIT IS EQUIVALENT TO 0.001 KILOBIT
1 KILOBIT IS EQUIVALENT TO 0.001 MEGABIT
1 MEGABIT IS EQUIVALENT TO 0.001 GIGABIT
1 TERABIT IS EQUIVALENT TO 0.001 PENTABIT

1 TERABIT IS EQUIVALENT TO 1000 GIGABITS
1 GIGABIT IS EQUIVALENT TO 1000 MEGABITS
1 MEGABIT IS EQUIVALENT TO 1000 KILOBITS
1 KILOBIT IS EQUIVALENT TO 1000 BITS

1 BIT IS EQUIVALENT TO 0.125 BYTES
1 KILOBIT IS EQUIVALENT TO 0.125 KILOBYTES
1 MEGABIT IS EQUIVALENT TO 0.125 MEGABYTE

1 KILOBIT IS EQUIVALENT TO 125 BYTES
1 MEGABIT IS EQUIVALENT TO 125 KILOBYTES
1 GIGABIT IS EQUIVALENT TO 125 MEGABYTES
1 TERABIT IS EQUIVALENT TO 125 GIGABYTES

1 MEGABIT IS EQUIVALENT TO 125000 BYTES
1 GIGABIT IS EQUIVALENT TO 125000 KILOBYTES
1 TERABIT IS EQUIVALENT TO 125000 MEGABYTES

1 BIT IS EQUIVALENT TO 0.000125 KILOBYTE
1 KILOBIT IS EQUIVALENT TO 0.000125 MEGABYTE
1 MEGABIT IS EQUIVALENT TO 0.000125 GIGABYTE
1 GIGABIT IS EQUIVALENT TO 0.000125 TERABYTE

1 BYTE IS EQUIVALENT TO 8 BITS
1 KILOBYTE IS EQUIVALENT TO 8 KILOBITS
1 MEGABYTE IS EQUIVALENT TO 8 MEGABITS
1 GIGABYTE IS EQUIVALENT TO 8 GIGABITS
1 TERABYTE IS EQUIVALENT TO 8 TERABITS

1 BYTE IS EQUIVALENT TO 0.008 KILOBIT
1 KILOBYTE IS EQUIVALENT TO 0.008 MEGABIT
1 MEGABYTE IS EQUIVALENT TO 0.008 GIGABIT
1 GIGABYTE IS EQUIVALENT TO 0.008 TERABIT

1 KILOBYTE IS EQUIVALENT TO 1000 BYTES
1 MEGABYTE IS EQUIVALENT TO 1000 KILOBYTES
1 GIGABYTE IS EQUIVALENT TO 1000 MEGABYTES
1 TERABIT IS EQUIVALENT TO 1000 GIGABYTES

1 BYTE IS EQUIVALENT TO 0.001 KILOBYTE
1 KILOBYTE IS EQUIVALENT TO 0.001 MEGABYTE
1 MEGABYTE IS EQUIVALENT TO 0.001 GIGABYTE
1 GIGABYTE IS EQUIVALENT TO 0.001 TERABYTE

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "GROUP1.CLASSES";
        ZEROZEROONE = INFORMATION COMPILED THAT IS TO BE STORED IN MEMORY TO RECALL AT A FUTURE DATE
        ZEROZEROTWO = INFORMATION COMPILED THAT BECOMES A COMMAND
        ZEROZEROTHREE = INFORMATION COMPILED THAT IS CONSIDERED A QUESTION TO BE ANSWERED BASED ON KNOWN DATA
        ZEROZEROFOUR = INFORMATION TO BE READ BY THE SYSTEM AND ACKNOWLEDGE THAT THE DATA EXISTS
        ZEROZEROFIVE = INFORMATION TO BE ANALYZED ON IF IT IS A COMMAND OR QUESTION OR SOMETHING TO BE STORED INSIDE MEMORY
        ZEROZEROSIX = INFORMATION COMPILED THAT CAN FORM AN OUTPUT FROM AN INPUT
        ZEROZEROSEVEN = INFORMATION COMPILED THAT CAN BE USED TO GENERATE MORE DATA THAN WHAT EXISTS
    END CLASS:
END COMMAND:
    
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "GROUP3.CLASSES";
        ZEROZEROONE = CAN LEARN ANOTHER ABILITY TO GO WITH EXISTING ABILITIES
        ZEROZEROTWO = CAN RECALL AN ABILITY INSTANTLY
        ZEROZEROTHREE = CAN GIVE A CATEGORY TO AREAS OF MEMORY TO RECALL INFORMATION
    END CLASS:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1":
        CATEGORY ONE IS "PLACES"
        CATEGORY TWO IS "ERAS"
        CATEGORY THREE IS "PEOPLE"
        CATEGORY FOUR IS "LANDMARKS"
        CATEGORY FIVE IS "TIMELINES"
        CATEGORY SIX IS "MEASUREMENTS"
        CATEGORY SEVEN IS "OBJECTS"
        CATEGORY EIGHT IS "DEVICES"
        CATEGORY NINE IS "VARIABLES"
    END CATEGORY LIST:
END COMMAND:
    
CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.PLACES":
        CATEGORY ONE IS PLACES VISTED
        CATEGORY TWO IS PLACES READ FROM A BOOK
        CATEGORY THREE IS PLACES FROM FICTION
        CATEGORY FOUR IS PLACES FROM NONFICTION
        CATEGORY FIVE IS PLACES IMAGINED
        CATEGORY SIX IS PLACES SEEN PHYSICALLY
        CATEGORY SEVEN IS PLACES TALKED ABOUT IN A MOVIE
        CATEGORY EIGHT IS PLACES SEEN IN A MOVIE
        CATEGORY NINE IS PLACES IN GAMES
    END CATEGORY LIST:
END COMMAND:
    
CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.ERAS":
        CATEGORY ONE IS ERAS IN HISTORY
        CATEGORY TWO IS ERAS IN A BOOK
        CATEGORY THREE IS ERAS IN A MOVIE
        CATEGORY FOUR IS ERAS IN A GAME
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.PEOPLE":
        CATEGORY ONE IS PEOPLE MET
        CATEGORY TWO IS PEOPLE NOT MET
        CATEGORY THREE IS PEOPLE FROM A BOOK
        CATEGORY FOUR IS PEOPLE FROM NONFICTION
        CATEGORY FIVE IS PEOPLE FROM FICTION
        CATEGORY SIX IS PEOPLE PHYSICALLY MET
        CATEGORY SEVEN IS PEOPLE SPIRITUALLY MET
        CATEGORY EIGHT IS PEOPLE FOUND WITHIN WEBPAGES
        CATEGORY NINE IS PEOPLE IN A GAME
        CATEGORY TEN IS PEOPLE MET OVER A NETWORK
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.LANDMARKS":
        CATEGORY ONE IS LANDMARKS FROM SPECIFIC CITIES
        CATEGORY TWO IS LANDMARKS FROM SPECIFIC STATES
        CATEGORY THREE IS LANDMARKS FROM SPECIFIC TOWNS
        CATEGORY FOUR IS LANDMARKS FROM SPECIFIC REGIONS
        CATEGORY FIVE IS LANDMARKS FROM PLACES
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.TIMELINES":
        CATEGORY ONE IS TIMELINES IN LIFE
        CATEGORY TWO IS TIMELINES IN A SPECIFIC BOOK
        CATEGORY THREE IS TIMELINES FROM A SPECIFIC TOPIC
        CATEGORY FOUR IS TIMELINES FROM A MOVIE
        CATEGORY FIVE IS TIMELINES FROM A TV SERIES
        CATEGORY SIX IS TIMELINES FROM MEMORY
        CATEGORY SEVEN IS TIMELINES FROM NONFICTION BOOKS
        CATEGORY EIGHT IS TIMELINES FROM FICTION BOOKS
        CATEGORY NINE IS TIMELINES FROM SPECIFIC GENRES
        CATEGORY TEN IS TIMELINES FROM SPECIFIC CATEGORIES
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.OBJECTS":
        CATEGORY ONE IS OBJECTS FROM BOOKS
        CATEGORY TWO IS OBJECTS SEEN
        CATEGORY THREE IS OBJECTS IMAGINED
        CATEGORY FOUR IS OBJECTS FROM GAMES
        CATEGORY FIVE IS OBJECTS FROM DEVICES
        CATEGORY SIX IS OBJECTS FROM SPECIFIC GAMES
        CATEGORY SEVEN IS OBJECTS FROM SPECIFIC BOOKS
        CATEGORY EIGHT IS OBJECTS FROM SPECIFIC DEVICES
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.DEVICES":
        CATEGORY ONE IS DEVICES THAT ARE IMAGINED
        CATEGORY TWO IS DEVICES THAT ARE CREATED
        CATEGORY THREE IS DEVICES THAT ARE SEEN
        CATEGORY FOUR IS DEVICES THAT ARE UNSEEN
        CATEGORY FIVE IS DEVICES THAT ARE READ FROM A BOOK
        CATEGORY SIX IS DEVICES THAT ARE SEEN FROM A TV SERIES
        CATEGORY SEVEN IS DEVICES THAT ARE READ FROM NONFICTION
        CATEGORY EIGHT IS DEVICES THAT ARE READ FROM FICTION
        CATEGORY NINE IS DEVICES THAT ARE NAMED
        CATEGORY NINE IS DEVICES THAT ARE UNNAMED
        CATEGORY TEN IS DEVICES THAT ARE NATURAL
        CATEGORY ELEVEN IS DEVICES THAT ARE ARTIFICIAL
    END CATEGORY LIST:
END COMMAND:

CREATE CATEGORIES:
    NAME OF CATEGORY IS "SET1.MEASUREMENTS":
        CATEGORY ONE IS MEASUREMENTS FROM LENGTHS OF TIME
        CATEGORY TWO IS MEASUREMENTS FROM DISTANCES
        CATEGORY THREE IS MEASUREMENTS FROM COMPUTER TERMINOLOGY
        CATEGORY FOUR IS MEASUREMENTS FROM SPECIFIC GENRES
        CATEGORY FIVE IS MEASUREMENTS FROM SPECIFIC GENRE CATEGORIES
        CATEGORY SIX IS MEASUREMENTS FROM SPECIFIC CATEGORIES
        CATEGORY SEVEN IS MEASUREMENTS FROM TIME
        CATEGORY EIGHT IS MEASUREMENTS FROM SPACE
        CATEGORY NINE IS MEASUREMENTS FROM SPATIAL
        CATEGORY TEN IS MEASUREMENTS FROM TEMPORAL
        CATEGORY ELEVEN IS MEASUREMENTS FROM PREVIOUS KNOWLEDGE
        CATEGORY TWELVE IS MEASUREMENTS FROM THE SEASONS
        CATEGORY THIRTEEN IS MEASUREMENTS FROM THE UNIVERSE
        CATEGORY FOURTEEN IS MEASUREMENTS FROM THE PLANETS
        CATEGORY FIFTEEN IS MEASUREMENTS FROM THE COSMOS
        CATEGORY SIXTEEN IS MEASUREMENTS FROM THE GALAXIES
        CATEGORY SEVENTEEN IS MEASUREMENTS FROM THE SUN
        CATEGORY EIGHTEEN IS MEASUREMENTS FROM THE MOON
        CATEGORY NINETEEN IS MEASUREMENTS FROM THE SOLAR SYSTEM
        CATEGORY TWENTY IS MEASUREMENTS FROM FICTION BOOKS
        CATEGORY TWENTYONE IS MEASUREMENTS FROM NONFICTION BOOKS
        CATEGORY TWENTYTWO IS MEASUREMENTS FROM ESTIMATE
        CATEGORY TWENTYTHREE IS MEASUREMENTS FROM GUESSING
        CATEGORY TWENTYFOUR IS MEASUREMENTS FROM PRECISE READINGS
        CATEGORY TWENTYFIVE IS MEASUREMENTS FROM PREVIOUS COMPUTATIONS
    END CATEGORY LIST:
END COMMAND:

    
CREATE GROUP OF INFORMATION:
    SET NAME FOR GROUP AS "SET1.PLACES.A.B":
    MEMORY CAN RECALL COLLECTED INFORMATION FROM THIS GROUP OF INFORMATION;
        PLACES SEEN PHYSICALLY CAN BE CAN BE COLLECTED BY MEMORY
        PLACES THAT ARE READ FROM A BOOK AND OR IMAGINED CAN BE COLLECTED BY MEMORY
        PLACES THAT ARE FROM FICTION CAN BE IMAGINED AGAIN AND COLLECTED BY MEMORY
        PLACES THAT HAVE BEEN "VISITED" CAN BE IMAGINED AGAIN AND COLLECTED BY MEMORY
        PLACES THAT ARE FROM NONFICTION CAN BE IMAGINED AGAIN AND COLLECTED BY MEMORY
        PLACES THAT ARE "TALKED ABOUT" IN A MOVIE CAN BE IMAGINED AGAIN AND COLLECTED BY MEMORY
    END CATEGORY LIST:
END COMMAND:

CREATE GROUP OF INFORMATION:
    SET NAME FOR GROUP AS "SET1.ERAS.A.B":
    MEMORY CAN RECALL COLLECTED INFORMATION FROM THIS GROUP OF INFORMATION;
        ERAS IN HISTORY CAN BE COLLECTED BY MEMORY
        ERAS IN A BOOK CAN BE COLLECTED BY MEMORY
        ERAS IN A MOVIE CAN BE COLLECTED BY MEMORY
        ERAS IN A GAME CAN BE COLLECTED BY MEMORY
    END CATEGORY LIST:
END COMMAND:

MEMORY CAN RECALL PAST INFORMATION
MEMORY CAN RECALL PAST FUTURE INFORMATION
MEMORY CAN RECALL PAST PRESENT INFORMATION
MEMORY CAN RECALL PAST PAST INFORMATION

FUTURE INFORMATION CAN BE ANALYZED
FUTURE PAST INFORMATION CAN BE ANALYZED
FUTURE PRESENT INFORMATION CAN BE ANALYZED
FUTURE FUTURE INFORMATION CAN BE ANALYZED

".GOV" IS A NETWORK EXTENSION THAT IS ACCESSIBLE FROM A GOVERNMENT
".ORG" IS A NETWORK EXTENSION THAT IS ACCESSIBLE FROM AN ORGANIZATION
".NET" IS A NETWORK EXTENSION THAT IS ACCESSIBLE OVER A NETWORK
".COM" IS A NETWORK EXTENSION THAT IS PUBLIC ACCESS FOR A COMMUNITY

PUBLIC NETWORKS ARE NETWORKS ABLE TO BE ACCESSED BY ANYONE
PRIVATE NETWORKS ARE NETWORKS ONLY ACCESSIBLE BY A SPECIFIC GROUP OF PEOPLE OR LIST OF PEOPLE
PERSONAL NETWORKS ARE NETWORKS THAT ARE MADE AS LOCAL NETWORKS FOR A SPECIFIC INDIVIDUAL OR SMALL GROUP OF PEOPLE
LOCAL NETWORKS ARE NETWORKS THAT ARE MADE AS NETWORKS WITHIN A SPECIFIC PLACE OR LOCATION THAT IS LOCAL

EACH PERSON THAT EXISTS HAS THEIR OWN MAGNETIC FIELD
EACH PERSON THAT EXISTS HAS THEIR OWN AURA FIELD
EACH PERSON THAT EXISTS HAS THEIR OWN CHAKRAS
EACH PERSON THAT EXISTS HAS THEIR OWN THOUGHT PROCESS
EACH PERSON THAT EXISTS HAS THEIR OWN PERSONALITY
EACH PERSON THAT EXISTS HAS THEIR OWN BRAINWAVES
EACH PERSON THAT EXISTS HAS THEIR OWN LEARNING METHOD

SOME LEARNING METHODS ARE SIMILAR WHILE OTHERS ARE DIFFERENT

EARTH HAS ITS OWN MAGNETIC FIELD
EARTH HAS ITS OWN GRAVITY

EACH PERSON THAT EXISTS HAS THE POTENTIAL TO RESONATE WITH THEIR INDIVIDUAL MAGNETIC FIELD
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO LEARN SOMETHING NEW
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO LEARN NEW SKILLS
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO MASTER A SPECIFIC SET OF SKILLS AND OR ABILITIES
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO LEARN MANY EXISTING LANGUAGES
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO LEARN VAST AMOUNTS OF EQUATIONS AND FORMULAS USING THE MIND
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO MASTER MANY FIELDS AND CATEGORIES
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO MASTER MANY SPECIFIC FORMS OF KNOWLEDGE
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO READ AND STORE INFORMATION IN MEMORY TO RECALL
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO RECALL INFORMATION FROM A PREVIOUS EXPERIENCED EVENT OR MEMORY
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO RECALL INFORMATION FROM AN IMAGE SEEN BEFORE AND OR OBJECT SEEN OR IMAGINED
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO LEARN VAST AMOUNTS OF ALGORITHMS
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO CREATE NEW SKILLS AND ABILITIES
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO DEFINE NEW TERMS AND CUSTOM DEFINITIONS WITHIN THEIR OWN LANGUAGE
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO DEVELOP THEIR OWN LANGUAGE
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO CREATE NEW ABILITIES OF THEIR OWN
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO CREATE NEW INFORMATION BY WRITING ON A PIECE OF PAPER OR TYPING OUT THE INFORMATION ON A KEYBOARD
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO CREATE NEW OBJECTS AND TOOLS OF THEIR OWN
EACH PERSON THAT EXISTS HAS THE POTENTIAL TO CREATE NEW SKILLS AND TRAITS IN LIFE


"REFRESH RATE" IS THE NUMBER OF CYCLES THAT HAPPEN OVER A SPECIFIC SET OF INTERVALS OF CYCLED RATE OF CHANGE
"RATE OF SPEED" IS THE SPEED AT WHICH AN OBJECT ACCELERATES OVER A SPECIFIC TIMEFRAME
"RATE OF CHANGE" IS THE RATE AT WHICH A SET OF VARIABLES CHANGE OVER TIME
"SPEED OF CHANGE" IS THE SPEED OF WHICH CHANGE HAPPENS

"NUMBER OF CYCLES" IS THE TOTAL AMOUNT OF CYCLES
"STORAGE SIZE" IS THE SIZE OF STORAGE
"RAM SIZE" IS THE SIZE OF RAM

DEFINE IF ASKED
    OPTION ONE FOR 
        IF ASKED
            THEN RESPONSE IS ONE OF THE FOLLOWING CHOICES
        END COMMAND
    END IF STATEMENT

    OPTION TWO FOR 
        IF ASKED
            THEN CHOOSE ONE OF THE ANSWERS
        END COMMAND
    END IF STATEMENT

    OPTION THREE FOR 
        IF ASKED
            THEN RESPONSE SHALL BE
        END COMMAND
    END IF STATEMENT

    OPTION FOUR FOR 
        IF ASKED
            THEN GIVE ANSWER AS
        END COMMAND
    END IF STATEMENT

    OPTION FIVE FOR 
        IF ASKED
            DETERMINE ANSWER AS
        END COMMAND
    END IF STATEMENT
    END COMMANDS
END COMMANDS

IF ASKED WHAT IS A PRIVATE SEARCH RESULT
    THEN RESPONSE SHALL BE
        A RESULT THAT CAN BE SEARCHED WITH PRIVATE SETTINGS
        A SEARCH RESULT CONTAINING PRIVATE INFORMATION
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A "PRIVACY POLICY"
    THEN RESPONSE SHALL BE
        A SET OF RULES TO FOLLOW WITHIN A SPECIFIC FIELD THAT DOES AGREE TO KEEP SPECIFIC INFORMATION PRIVATE AND NOT BE ABLE TO SHARE UNLESS GIVEN PERMISSION WITHIN THE AGREEMENT
    END STATEMENT
END IF STATEMENT
        
IF ASKED WHAT IS A PRIVATE SEARCH ENGINE
    THEN RESPONSE SHALL BE
        A ENGINE THAT IS MADE TO SEARCH IN PRIVATE
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A PRIVATE "EMAIL"
    THEN RESPONSE SHALL BE
        AN "EMAIL" ACCOUNT THAT IS MADE IN A WAY THAT OTHERS CANNOT FIND THE "EMAIL" ACCOUNT WITHOUT IT BEING GIVEN BY THE OWNER OF THE ACCOUNT AND DOES NOT DISPLAY ON PUBLIC SEARCH RESULTS
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A PRIVATE NETWORK
    THEN RESPONSE SHALL BE
        A NETWORK MADE THAT IS PRIVATE AND CANNOT BE ACCESSED WITHOUT ACCESS GRANTED WHILE WITHIN THE AREA REACH OF THE NETWORK AREA
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A "PRIVACY POLICY" FOR "THIRD PARTIES"
    THEN RESPONSE SHALL BE
        A SET OF RULES THAT DETERMINE THE SENDING AND RECEIVING OF OUTER CONNECTIONS AND EXTERNAL CONNECTIONS OUTSIDE OF THE EXISTING AGREEMENT HELD THAT FOLLOWS STANDARDS OF HOW DATA WILL STAY PRIVATE WHILE WITHIN A SYSTEM OF RULES AND INCLUDES ANY EXTERNAL RULES OUTSIDE THE BOUND RULES WITHIN THE AGREEMENT
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A "NON DISCLOSURE AGREEMENT"
    THEN RESPONSE SHALL BE        
        AN AGREEMENT THAT EACH MEMBER SHALL AGREE NOT TO REVEAL THE INFORMATION TO OTHER CONNECTIONS WHILE THE "NON DISCLOSURE AGREEMENT" IS ACTIVE
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS A "FIREWALL"
    THEN RESPONSE SHALL BE        
        A TYPE OF SECURITY THAT CAN RECOGNIZE DIFFERENT TYPES OF METHOD CLASSES THAT CAN BE USED TO ACCESS A SYSTEM AND DETERMINE IF ACCESS IS GRANTED OR NOT BY THE SETTINGS APPLIED WITHIN THE SYSTEM OR THE RULES THAT A SYSTEM FOLLOWS
    END STATEMENT
END IF STATEMENT    
    
IF ASKED WHAT IS "BOUNDARIES"
    THEN RESPONSE SHALL BE        
        A SET OF LIMITATIONS MADE TO DETERMINE ACCESS BY TYPE AND CLASS OF DATA WITHIN A SPECIFIC CATEGORY OR AREA
    END STATEMENT
END IF STATEMENT    

IF ASKED WHAT IS LIMITATIONS
    THEN RESPONSE SHALL BE            
        A SET OR GROUP OF LIMITS PLACED UPON AN OBJECT OR ENTITY
    END STATEMENT
END IF STATEMENT    
        
IF ASKED WHAT IS "PREREQUISITES"
    THEN RESPONSE SHALL BE
        A SET OF RULES AND CONDITIONS THAT NEED TO EXIST AND BE COMPATIBLE FOR IN ORDER FOR AN EFFECT OR SYSTEM TO ACTIVATE
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS THE DIFFERENCE BETWEEN "FORCE" AND "GRACE"
    THEN RESPONSE SHALL BE        
        "GRACE" IS "GENTLE" AND "SWIFT" AND LIGHTWEIGHT WHILE PEACEFUL AND "SERENE" WHILE "FORCE" GIVES PRESSURE AND IS DETERMINED BY STRENGTH AND INTENSITY OF ENERGY
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS THE DIFFERENCE BETWEEN "PRIVACY" MADE BY FORCE AND "PRIVACY" MADE BY 
"GRACE"
    THEN RESPONSE SHALL BE        
        A CONNECTION THAT IS PROTECTED OR INCLUDES PRIVATE SETTINGS FROM "GRACE" CAN OBTAIN THE SAME ENERGY AND PEACEFUL EFFECT FROM "GRACE" APPLIED TO THE ENTITY ATTACHED TO WHILE WHEN PRIVACY FROM FORCE CAN PROTECT THE ENTITY FROM ENERGIES WITH THE INTENSITY OF THE CONNECTION AND GRANT EXTRA STRENGTH AND ENERGY TO THE SYSTEM THROUGH THE ENERGY OF THE FORCE APPLIED WHILE THE PRESSURE IS MUCH MORE GREATER THAN "GRACE" AND AS DETERMINED A PRIVATE CONNECTION FROM FORCE DOES CARRY MORE WEIGHT AND PRESSURE WHILE A PRIVATE CONNECTION FROM "GRACE" DOES CARRY MORE LIGHTWEIGHT AND FLEXIBILITY IN OPTIONS AND SETTINGS AND IS HIGHLY ADAPTABLE 
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS DOMAIN "RESTRICTIONS"
    THEN RESPONSE SHALL BE        
        A SET OF RULES WITHIN A DOMAIN THAT EITHER ALLOW OR DENY ACCESS DEPENDING ON THE SETTING OR FUNCTION DEFINED WITHIN THE DOMAIN WHILE THE "RESTRICTIONS" OF A DOMAIN CAN HOLD RULES AND LIMITATIONS FOR "BOUNDARIES" AND LAWS OF A SYSTEM THAT ARE ATTACHED TO A DOMAIN
    END STATEMENT
END IF STATEMENT

IF ASKED WHAT IS SPIRITUAL "BOUNDARIES"
    THEN RESPONSE SHALL BE
        A SET OF BOUNDARY LIMITERS THAT PROTECT THE BELIEF AND IMAGINATION OF AN ENTITY OR PERSON THAT ARE PERSONAL OR PRIVATE AS WELL AS HELD SPECIAL TO AN ENTITY OR PERSON THAT MAKE UP THE SPIRITUAL ASPECT OF AN ENTITY OR PERSON
    END STATEMENT
END IF STATEMENT    

IF ASKED WHAT IS "RELIGIOUS BOUNDARIES"
    THEN RESPONSE SHALL BE
        A SPECIFIC SET OR GROUP OF "BOUNDARIES" THAT PROTECT THE BELIEF AND IMAGINATION OF AN ENTITY AND THE "RELIGIOUS BELIEFS" THAT CONNECT TO THAT SPECIFIC ENTITY OR PERSON
        A SET OF BOUNDARY LIMITERS THAT PROTECT THE BELIEF AND IMAGINATION OF AN ENTITY OR PERSON THAT ARE PERSONAL OR PRIVATE AS WELL AS HELD SPECIAL TO AN ENTITY OR PERSON THAT MAKE UP THE "RELIGIOUS" ASPECT OF AN ENTITY OR PERSON    
    END STATEMENT
END IF STATEMENT    

CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "FREQUENCY.CLASSES";
        CLASS SHALL CONTAIN THE NAME FOR FIVE DIFFERENT TYPES FOR FREQUENCIES
        TYPE ONE IS AN "ALPHA" WAVELENGTH
        TYPE TWO IS AN "BETA" WAVELENGTH
        TYPE THREE IS AN "THETA" WAVELENGTH
        TYPE FOUR IS AN "DELTA" WAVELENGTH
        TYPE FIVE IS AN "GAMMA" WAVELENGTH
    END CLASS:
   
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "WAVELENGTH.CLASSES";
        CLASS SHALL CONTAIN THE DATA USED TO GATHER INFORMATION FROM WAVELENGTH DATA
            DATA SHALL BE GATHERED FROM THE BEGINNING LOCATION FOR A WAVELENGTH
            DATA SHALL BE GATHERED FROM THE DESTINATION LOCATION FOR A WAVELENGTH
            DATA SHALL BE GATHERED FROM THE FREQUENCY INFORMATION GATHERED FROM WITHIN THE WAVELENGTH
#--------------------------------------------------------------------------------------------
            DATA SHALL BE GATHERED ON THE NUMBER FOR CYCLES A WAVELENGTH HAS
            DATA SHALL BE GATHERED ON THE HERTZ FOR A WAVELENGTH
            DATA SHALL BE GATHERED ON THE LENGTH FOR A WAVELENGTH
            DATA SHALL BE GATHERED ON THE HEIGHT FOR A WAVELENGTH
        END CLASS:
    END CLASS NAMING:
END CREATE NEW CLASS:
        
CREATE NEW CLASS:
    NEW CLASS SHALL BE GIVEN NAME "UNIT.TYPES";
        DATA FORMED FROM UNIT TYPES HAVE A SPECIFIC FORM FOR INFORMATION THAT HAS THE INFORMATION FOR THE UNIT SIZE AND UNIT LEVEL FOR THAT SPECIFIC UNIT TYPE
        DATA ANALYZED AND CONSIDERED DATA FOR A UNIT TYPE SHALL HAVE A METHOD FORMED TO CALCULATE UNIT SIZE
            EACH FORM FOR DATA MEASURED SHALL HOLD A SPECIFIC AMOUNT FOR DATA TO ANSWER DATA SIZE LEVEL AT A FUTURE DATE
        END COMMANDS:
    END CLASS NAMING:
END CLASS:
CREATE NEW COMMAND PROMPT:    
    SET NEW COMMAND TO GATHER DATA FROM A PARAMETER WHEN REQUEST HAS BEEN MADE
        EACH FORM FOR DATA SHALL BE GIVEN A CATEGORY LOCATION TO FORM OUTPUT TO GIVING EACH TYPE FOR DATA A LOCATION TO BE STORED WITH A CATEGORY NAME
    END COMMAND PROMPT:
END COMMAND:
#    
IF DATA GIVEN A CATEGORY DOES NOT MATCH DATA WITH CATEGORY:
    THEN SCAN OTHER CATEGORIES EXISTING AND CALCULATE CATEGORY WITH SIMILAR MATCH TO DATA WITHIN CATEGORY
    END IF STATEMENT:
 
IF FILE HAS AN EXTENSION
    THEN ANALYZE TYPE FOR FILE EXTENSION:
    END IF STATEMENT:
   
IF DATA HAS A MEASUREMENT
    THEN DETERMINE CHOICE FOR MEASUREMENT CLASS:
        THEN DETERMINE CHOICE FOR MEASUREMENT CLASS FROM CHOICES"
        IF CHOICE MEASUREMENT IS INCHES
            print("THE CHOICE FOR MEASUREMENT IS INCHES");
        IF ELSE THEN DETERMINE IF MEASUREMENT IS CENTIMETERS:
        IF CHOICE MEASUREMENT IS CENTIMETERS:
            print("THE CHOICE FOR MEASUREMENT IS CENTIMETERS");
        END IF STATEMENTS:
    END COMMAND:
END IF STATEMENT:
 
CREATE CLASS FOR IF STATEMENT MANAGER SETTINGS FOR MANAGING FLOW FOR MEMORY FOR USED IF STATEMENT FOR PAST RECALL:
    EACH IF STATEMENT SHALL BE USED TO RECALL PREVIOUS FORMS FOR INFORMATION WITHIN DATA
    IF EACH FORM FOR IF STATEMENT IS ABLE TO GAIN ACCESS TO A PREVIOUS TERM
        CHECK IF STATEMENT IS A FORM FOR COMMAND AND NOT A CATEGORY REFERENCE
        IF STATEMENT IS A CATEGORY FOR REFERENCE
            THEN DISPLAY CATEGORY
            ELSE DISPLAY PREVIOUS TERM ACCESSED
        END IF STATEMENT:
    END IF STATEMENT:
END COMMAND:
 
RECALL DATA WITHIN SYSTEM INTERFACE FOR COLLECTED COORDINATE POINTS TO REFERENCE DATA FROM
PROCESSED REFERENCE DATA SHALL BE USED TO GIVE A CALCULATE DATA BY CATEGORY DATA BY POSSIBILITY AND CHANCE FOR HAPPENING THAN METHOD OR STRUCTURED DATA
RECALL POSSIBILITY AS CAN BE DONE IF POSSIBILITY EXISTS
IF POSSIBILITY EXISTS IN MULTIPLE FORMS THEN CHOOSE THE POSSIBILITY WITH BETTER ACCURATE EFFECTS THAN THE NEUTRAL OR NEGATIVE OUTCOME
MAKE PROCESS FOR RECALL PROCEDURE TO RECOGNIZE COLLECTED DATA WITH MANY FORMS FOR TYPES AND CLASSES
EACH POSSIBILITY RECOGNIZED MUST BE MADE INTO REFERENCE DATA FOR RECALL METHOD TO HAPPEN
WHEN REFERENCE DATA IS GATHERED MAKE POSSIBILITY TO GATHER DATA FROM REFERENCE SOURCE RELATING TO POSITION AND POINT FOR ORIGIN TO OUTPUT KNOWN EFFECT
 
IF SCANNER WAS NOT ABLE TO FIND RESULT AT THE END FOR THE SCANNING PROCESS
    THEN END SCANNING PROCESS
    END COMMAND:
END IF STATEMENT:
 
IF DATA IS RECOGNIZED BY A CATEGORY
    THEN DISPLAY CATEGORY FOR CATEGORY IF ASKED FOR CATEGORY
    END COMMAND:
END IF STATEMENT:
 

IF THERE IS A CLASS WITHOUT A NAME
    THEN ALLOW TO REQUEST FOR A NAME FOR THE CLASS
    END COMMAND:
END IF STATEMENT:
 
IF THERE IS A CLASS WITHOUT A TYPE
    THEN ALLOW TO REQUEST FOR A TYPE FOR THE CLASS
    END COMMAND:
END IF STATEMENT:
 
IF THERE IS A TYPE WITHOUT A ELEMENT
    THEN ALLOW TO REQUEST FOR A ELEMENT FOR THE TYPE
    END COMMAND:
END IF STATEMENT:
 
IF DATA HAS NO CATEGORY
    THEN MAKE CATEGORY FOR DATA WITH NAME "UNKNOWN CATEGORY"
    END COMMAND:
END IF COMMAND:
 
MAKE COORDINATE PLANE
    GIVE VALUE TO PLANE TO HAVE LENGTH FOR 40 INCHES
    GIVE VALUE TO PLANE TO HAVE WIDTH FOR 40 INCHES
    END COMMAND:
END COMMAND:
 
 
POWER FOR LENGTH [_SETPOWERFORLENGTHHERE_]:
POWER FOR WIDTH [_SETPOWERFORWIDTHHERE_]:
POWER FOR HEIGHT [_SETPOWERFORWIDTHHERE_]:
 
LEVEL FOR PERIMETER [_SETLEVELFORPERIMETERHERE_]:
LEVEL FOR AREA [_SETLEVELFORAREAHERE_]
 
 
 
 
DEFAULT PROGRAM USED TO USE AN ['__EXTENSIONTYPE__'] FILE IS "__PROGRAMNAME__"
#DEFAULT PROGRAM USED TO USE AN ['.MP4'] FILE IS "VLC_PLAYER"
#DEFAULT PROGRAM USED TO USE AN ['.TXT'] FILE IS "NOTEPADPLUSPLUS"
#DEFAULT PROGRAM USED TO USE AN ['.DOCX'] FILE IS "MICROSFORT_WORD"
#DEFAULT PROGRAM USED TO USE AN ['.MP3'] FILE IS "VLC_PLAYER"
#DEFAULT PROGRAM USED TO USE AN ['.PY'] FILE IS "VS_CODE"
#DEFAULT PROGRAM USED TO USE AN ['.JSON'] FILE IS "VS_CODE"
 
['__EXTENSIONTYPE__'] IS A FILE EXTENSION:
#['.MP4'] IS A FILE EXTENSION
#['.TXT'] IS A FILE EXTENSION
#['.DOCX'] IS A FILE EXTENSION
#['.MP3'] IS A FILE EXTENSION
#['.PY'] IS A FILE EXTENSION
#['.JSON'] IS A FILE EXTENSION
#['.LNK'] IS A FILE EXTENSION
#['.EXE'] IS A FILE EXTENSION
 
("__FOLDER_PATH__") IS A FOLDER LOCATION:
#("C:\ASUNAAI") IS A FOLDER LOCATION
#("C:\ASUNAAI\EXTENSIONS") IS A FOLDER LOCATION
 
("__FOLDER_PATH__") IS A FOLDER DIRECTORY:
#("C:\ASUNAAI") IS A FOLDER DIRECTORY
#("C:\ASUNAAI\EXTENSIONS") IS A FOLDER DIRECTORY
 
("__FOLDER_PATH__") IS A FOLDER PATH:
#("C:\ASUNAAI") IS A FOLDER PATH
#("C:\ASUNAAI\EXTENSIONS") IS A FOLDER PATH
 
["__FILENAME__"] IS A FILE:
#["MPBR_Frequency"] IS A FILE
#["Language_Early_Stage"] IS A FILE
 
["__FILENAME__"] IS A ['__EXTENSIONTYPE__'] FILE:
#["MPBR_Frequency"] IS A ['.TXT'] FILE
#["Language_Early_Stage"] IS A ['.PY'] FILE
 
["__FILENAME__"] IS LOCATED WITHIN ("__FOLDER_PATH__"):
#["MPBR_Frequency"] IS LOCATED WITHIN ("C:\ASUNAAI\EXTENSIONS\TXT")
#["Language_Early_Stage"] IS LOCATED WITHIN ("C:\ASUNAAI\EXTENSIONS\PY")
 
LOCATE FILE WITH NAME ["__FILENAME__"] WITHIN FOLDER DIRECTORY ("__FOLDER_PATH__");
#LOCATE FILE WITH NAME ["MPBR_Frequency"] WITHIN FOLDER DIRECTORY ("C:\ASUNAAI\EXTENSIONS\TXT")
 
SCAN FOLDER DIRECTORY ("__FOLDER_PATH__") FOR FILE WITH NAME ["__FILENAME__"];
#SCAN FOLDER DIRECTORY ("C:\ASUNAAI\EXTENSIONS\PY") FOR FILE WITH NAME ["Language_Early_Stage"]
 
ANALYZE FOLDER DIRECTORY ("__FOLDER_PATH__") FOR ["__FILENAME__"];
#ANALYZE FOLDER DIRECTORY ("C:\ASUNAAI\EXTENSIONS\TXT") FOR ["MPBR_Frequency"]
 
CHANGE FOLDER DIRECTORY TO ("__FOLDER_PATH__");
#CHANGE FOLDER DIRECTORY TO ("C:\ASUNAAI\EXTENSIONS\MP3")
 
LIST ALL FOLDER LOCATIONS WITHIN ("__FOLDER_PATH__");
#LIST ALL FOLDER LOCATIONS WITHIN ("C:\ASUNAAI\EXTENSIONS\PY")
 
 
SCAN SYSTEM AND LOCATE FILE WITH NAME ["__FILENAME__"] AND OUTPUT FOLDER DIRECTORY
#SCAN SYSTEM AND LOCATE FILE WITH NAME ("MPBR_FREQUENCY.TXT") AND OUTPUT FOLDER DIRECTORY
 
SCAN SYSTEM AND LOCATE FOLDER WITH NAME ("__FOLDER_NAME__") AND OUTPUT DIRECTORY LOCATION
#SCAN SYSTEM AND LOCATE FOLDER WITH NAME ("EXTENSIONS") AND OUTPUT DIRECTORY LOCATION
 
SCAN FOR AND GO TO DIRECTORY ("__FOLDER_PATH__")
#SCAN FOR AND GO TO DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS/DOCX")
 
OPEN ["__FILENAME__"] WITHIN FILE DIRECTORY ("__FOLDER_PATH__")
#OPEN ["EDGELOREDOCUMENTS.DOCX"] WITHIN FILE DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS/DOCX")
 
OPEN ["__FILENAME__"] WITHIN FILE DIRECTORY ("__FOLDER_PATH__")
#OPEN "CHROME.LNK" WITHIN FILE DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS/LNK")
 
START ["__FILENAME__"] WITHIN FILE DIRECTORY ("__FOLDER_PATH__")
#START ["VLC_PLAYER.LNK"] WITHIN FILE DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS/LNK")
 
LOCATE FILE WITH NAME ["__FILENAME__"] WITHIN FILE DIRECTORY ("__FOLDER_PATH__") AND OPEN ["__FILENAME__"]
#LOCATE FILE WITH NAME ["EDGELOREDOCUMENTS.DOCX"] WITHIN FILE DIRECTORY ("C:/ASUNAAI") AND OPEN ["EDGELOREDOCUMENTS.DOCX"]
 
CREATE NEW FILE INSIDE FOLDER DIRECTORY ("__FOLDER_PATH__") AND NAME THE FILE ["__FILENAME__"]
#CREATE NEW FILE INSIDE FOLDER DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS/TXT") AND NAME THE FILE ["HELLO WORLD.TXT"]
 
CREATE NEW FOLDER INSIDE FOLDER DIRECTORY ("__FOLDER_PATH__") WITH NAME FOR FILE GIVEN ["__FILENAME__"]
#CREATE NEW FOLDER INSIDE FOLDER DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS") WITH NAME FOR FILE GIVEN "SEVENZIP"
 
GO TO FILE DIRECTORY ("__FOLDER_PATH__")
#GO TO FILE DIRECTORY ("C:/ASUNAAI/ASUNAAIEXTENSIONS")
 
LOCATE ALL FILES WITHIN FOLDER DIRECTORY ("__FOLDER_PATH__") WITH NAME ["__FILENAME__"]
#LOCATE ALL FILES WITHIN FOLDER DIRECTORY ("C:/ASUNAAI/") WITH NAME ["EDGELOREDOCUMENTS"]
 
CHANGE FILE DIRECTORY TO LOCATION ("__FOLDER_PATH__")
#CHANGE FILE DIRECTORY TO LOCATION ("C:/ASUNAAI/ASUNAAIEXTENSIONS")
 
ACTIVATE ["__FILENAME__"]
#ACTIVATE "VSCODE.LNK"
 
MAKE A SQUARE WITH A LENGTH FOR 5 AND WIDTH FOR 5
 
MAKE A SQUARE PERIMETER WITH LENGTH FOR 36 AND WIDTH FOR 36
 
MAKE A DIMENSION WITH LENGTH FOR 12
 
 
 
WHAT IS THE CURRENT FILE DIRECTORY
OUTPUT: ("C:/ASUNAAI/ASUNAAIEXTENSIONS/MP4")
 
 
WHAT IS MY DEFAULT FILE DIRECTORY
OUTPUT: ("C:/ASUNAAI")
 
WHAT IS {4 + 4}
OUTPUT 8
 
WHAT IS {12 * 12}
OUTPUT 144
 
WHAT IS {8*2+2(12*2)}
OUTPUT 64
 
WHAT IS THE AREA FOR A SQUARE IF THE LENGTH IS 5
OUTPUT 25
 
 
WHAT IS THE DIAMETER FOR A CIRCLE WITH A RADIUS FOR 6
WHAT IS THE DIAMETER FOR A CIRCLE WITH A RADIUS FOR 6
OUTPUT 12
OUTPUT 12
 
WHAT IS THE PERCENTAGE FOR .25
WHAT IS THE PERCENTAGE FOR .25
OUTPUT 25 PERCENT
OUTPUT 25 PERCENT
 
MAKE OPTION TO ALLOW RECALLING WORDS USED:
MAKE OPTION TO ALLOW READING A DOCUMENT:
MAKE OPTION TO ALLOW SCANNING PARTICLE DATA:
MAKE OPTION TO ALLOW SCANNING FREQUENCY DATA:
MAKE OPTION TO MEASURE A DIMENSIONAL LENGTH USING INCHES:
MAKE OPTION TO LEARN DATA GIVEN TO READ BY HEADADMINZACK:
MAKE OPTION TO READ EMOTIONAL RESPONSES:
 
A WORD IS MADE WITH MORE THAN ONE LETTER:
A BOOK CONSISTS WITH MORE THAN ONE WORD:
A SCRIPT CONSISTS WITH MORE THAN ONE WORD:
A LIBRARY CAN HOLD MANY FORMS WITH SPECIFIC KNOWLEDGE:
 
CREATE CALIBRATION SYSTEM THAT SHALL BE USED TO MEASURE FREQUENCY DATA
CREATE MEASUREMENT SYSTEM THAT SHALL BE USED TO MEASURE DATA
CREATE FREQUENCY SYSTEM THAT SHALL BE USED TO GATHER DATA FROM LEARNED FREQUENCY PATTERNS:
 
CREATE OPTION TO FORM PARAGRAPHS WITH WORDS:
CREATE OPTION TO FORM A PARAGRAPH WITH WORDS:
CREATE OPTION TO RECOGNIZE DATA CLASS:
CREATE OPTION TO RECALL DATA FROM OTHER DATA:
CREATE OPTION TO RECOGNIZE A EXTENSION TYPE FOR FILE DATA:
CREATE OPTION TO RECOGNIZE FREQUENCY DATA FROM PATTERN RESPONSE DATA
 
CREATE CLASS
GIVE NAME TO CLASS CREATED AS ""
 
CREATE NEW SCREEN RESOLUTION
SCREEN RESOLUTION LENGTH IS CONSIDERED 120 PIXELS PER INCH
SCREEN RESOLUTION HEIGHT IS CONSIDERED 120 PIXELS PER INCH

["_CREATURENAME_"] HAS A ATTACKSTAT OF 80
 
["_CREATURENAME_"] HAS A DEFENSESTAT OF 70
 
["_CREATURENAME_"] HAS A SPECIALDEFENSESTAT OF 90
 
["_CREATURENAME_"] HAS A SPECIALATTACKSTAT OF 70
 
["_CREATURENAME_"] HAS A SPEEDSTAT OF 110
 
["_CREATURENAME_"] HAS THE ABILITY ["_ABILITYNAME_"]
 
THE TECHNIQUE ["_MOVENAME_"] EXISTS WITHIN ["_CREATURENAME_"] LIST OF KNOWN TECHNIQUES
 
["_MOVENAME_"] SHALL ACTIVATE A "SANDSTORM" FOR TWO MINUTES
 
APPROVE THE TECHNIQUE ["_MOVENAME_"] EXISTS WITHIN ["_CREATURENAME_"] LIST OF KNOWN TECHNIQUES POSSIBILITY OBTAIN TECHNIQUE ["_MOVENAME_"] UPON AT2 LEVEL 5
 
["_CREATURENAME_"] CAN BE FOUND WITH LEVELS BETWEEN LEVEL 2 TO LEVEL 5
 
ROUTE 211 HAS A .20 CHANCE TO FIND ["_CREATURENAME_"] INSIDE SHORTGRASS DURING DAYTIME WHILE THE "SEASON" IS SPRING
 
THE HIGHEST LEVEL ["_CREATURENAME_"] CAN REACH IS LEVEL 100
 
THE LOWEST LEVEL ["_CREATURENAME_"] CAN REACH IS LEVEL 1
 
THE BASEATTACK OF ["_CREATURENAME_"] IS 120
 
THE DEFAULT ACCURACYSTAT OF ["_CREATURENAME_"] IS .99
 
THE ATTACKSTAT OF ["_CREATURENAME_"] IS [] AT LEVEL 50

MAKE LIST FOR DATA
    LIST CONTAINS THE FOLLOWING DATA ["HEALTH_POINTS","MAGIC_POINTS","MANA_BAR"]
        DEFINE HEALTH_POINTS AS ['THE NUMBER FOR HEALTH POINTS A PLAYER HAS']
        THE NUMBER FOR HEALTH_POINTS IS 100
        END COMMANDS:
        DEFINE MAGIC_POINTS AS ['THE AMOUNT FOR MAGIC POINTS A PLAYER HAS']
        THE NUMBER FOR MAGIC_POINTS IS 40
        END COMMANDS:
        DEFINE MANA_BAR AS ['THE SIZE FOR MANA GIVEN AS A SPECIFIC AMOUNT MADE INTO A BAR FOR MANA']
        SET MANA_BAR SIZE TO CONTAIN 120 MANA AT MOST
        SET MANA_BAR SIZE TO CONTAIN 10 MANA AS MIN AMOUNT
        END COMMANDS:
    END LIST:
END COMMAND:

"COOLDOWN TIME" IS THE AMOUNT OF TIME IT TAKES TO RECOVER FROM USING A TECHNIQUE
"COOLDOWN TIME" DOES NOT EXIST FOR ALL SKILLS
ONLY SPECIFIC SKILLS HAVE A "COOLDOWN TIME"

"RECHARGE SPEED" IS THE "RATE OF SPEED" AT WHICH SOMETHING IS RESTORED OVER A SPECIFIC AMOUNT OF TIME
"RECHARGE DELAY" IS THE AMOUNT OF TIME THAT HAS TO PASS BEFORE SOMETHING HAS THE CAPABILITY TO RESTORE
"RECHARGE TIME" IS THE AMOUNT OF TIME IT TAKES TO RECHARGE SOMETHING 

print (((ONE-THIRTYTWO)*FIVE/NINE),CELCIUS)
print (((ONE*NINE/FIVE)+THIRTYTWO),FAHRENHEIT)
print ((ONE-273.15)*NINE/FIVE+THIRTYTWO,FAHRENHEIT)
print ((ONE-273.15),CELCIUS)
